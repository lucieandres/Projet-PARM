<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="1"/>
    </tool>
    <tool name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="north"/>
    </tool>
    <tool name="Probe">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="radix" val="10unsigned"/>
    </tool>
    <tool name="Tunnel">
      <a name="facing" val="south"/>
    </tool>
    <tool name="Pull Resistor">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Clock">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
      <a name="width" val="2"/>
    </tool>
    <tool name="Ground">
      <a name="facing" val="west"/>
      <a name="width" val="24"/>
    </tool>
    <tool name="Transistor">
      <a name="type" val="n"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="NOT Gate">
      <a name="size" val="20"/>
    </tool>
    <tool name="AND Gate">
      <a name="size" val="30"/>
    </tool>
    <tool name="OR Gate">
      <a name="size" val="30"/>
    </tool>
  </lib>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  --use ieee.numeric_std.all;

entity VHDL_Component is
  port(
  ------------------------------------------------------------------------------
  --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example
  ------------------------------------------------------------------------------
  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
    );
end VHDL_Component;

--------------------------------------------------------------------------------
--Complete your VHDL description below
architecture type_architecture of VHDL_Component is


begin


end type_architecture;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example

	  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
  );
end TCL_Generic;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <main name="Opcode_Decoder"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="Opcode_Decoder">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Opcode_Decoder"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(420,240)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Shift"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(420,320)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Data_Processing"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(420,410)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Load_Store"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(420,490)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="SP_Address"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(420,610)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Conditional"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(80,80)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="south"/>
      <a name="label" val="Opcode"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(80,80)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="6"/>
      <a name="incoming" val="6"/>
    </comp>
    <comp lib="1" loc="(200,100)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(200,120)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(200,140)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(200,160)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(200,180)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(200,200)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(320,240)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(320,320)" name="AND Gate">
      <a name="inputs" val="6"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(320,410)" name="AND Gate">
      <a name="inputs" val="4"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(320,490)" name="AND Gate">
      <a name="inputs" val="4"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(320,580)" name="AND Gate">
      <a name="inputs" val="4"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(320,640)" name="AND Gate">
      <a name="inputs" val="5"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(390,610)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="8" loc="(590,250)" name="Text">
      <a name="text" val="Shift, add, sub, mov"/>
    </comp>
    <comp lib="8" loc="(610,415)" name="Text">
      <a name="text" val="Load/Store"/>
    </comp>
    <comp lib="8" loc="(615,495)" name="Text">
      <a name="text" val="SP Address"/>
    </comp>
    <comp lib="8" loc="(655,615)" name="Text">
      <a name="text" val="Conditional branch"/>
    </comp>
    <comp lib="8" loc="(685,330)" name="Text">
      <a name="text" val="Data Processing"/>
    </comp>
    <wire from="(100,100)" to="(100,180)"/>
    <wire from="(100,180)" to="(100,340)"/>
    <wire from="(100,180)" to="(180,180)"/>
    <wire from="(100,340)" to="(100,590)"/>
    <wire from="(100,340)" to="(290,340)"/>
    <wire from="(100,590)" to="(100,650)"/>
    <wire from="(100,590)" to="(290,590)"/>
    <wire from="(100,650)" to="(100,700)"/>
    <wire from="(100,650)" to="(290,650)"/>
    <wire from="(110,100)" to="(110,160)"/>
    <wire from="(110,160)" to="(110,480)"/>
    <wire from="(110,160)" to="(180,160)"/>
    <wire from="(110,480)" to="(110,640)"/>
    <wire from="(110,480)" to="(290,480)"/>
    <wire from="(110,640)" to="(110,700)"/>
    <wire from="(110,640)" to="(290,640)"/>
    <wire from="(120,100)" to="(120,140)"/>
    <wire from="(120,140)" to="(120,390)"/>
    <wire from="(120,140)" to="(180,140)"/>
    <wire from="(120,390)" to="(120,470)"/>
    <wire from="(120,390)" to="(290,390)"/>
    <wire from="(120,470)" to="(120,560)"/>
    <wire from="(120,470)" to="(290,470)"/>
    <wire from="(120,560)" to="(120,700)"/>
    <wire from="(120,560)" to="(290,560)"/>
    <wire from="(130,100)" to="(130,120)"/>
    <wire from="(130,120)" to="(130,700)"/>
    <wire from="(130,120)" to="(180,120)"/>
    <wire from="(140,100)" to="(140,700)"/>
    <wire from="(140,100)" to="(180,100)"/>
    <wire from="(200,100)" to="(260,100)"/>
    <wire from="(200,120)" to="(250,120)"/>
    <wire from="(200,140)" to="(240,140)"/>
    <wire from="(200,160)" to="(230,160)"/>
    <wire from="(200,180)" to="(220,180)"/>
    <wire from="(200,200)" to="(210,200)"/>
    <wire from="(210,200)" to="(210,250)"/>
    <wire from="(210,250)" to="(210,350)"/>
    <wire from="(210,250)" to="(290,250)"/>
    <wire from="(210,350)" to="(290,350)"/>
    <wire from="(220,180)" to="(220,230)"/>
    <wire from="(220,230)" to="(220,420)"/>
    <wire from="(220,230)" to="(290,230)"/>
    <wire from="(220,420)" to="(220,500)"/>
    <wire from="(220,420)" to="(290,420)"/>
    <wire from="(220,500)" to="(290,500)"/>
    <wire from="(230,160)" to="(230,330)"/>
    <wire from="(230,330)" to="(230,400)"/>
    <wire from="(230,330)" to="(290,330)"/>
    <wire from="(230,400)" to="(230,570)"/>
    <wire from="(230,400)" to="(290,400)"/>
    <wire from="(230,570)" to="(290,570)"/>
    <wire from="(240,140)" to="(240,310)"/>
    <wire from="(240,310)" to="(240,630)"/>
    <wire from="(240,310)" to="(290,310)"/>
    <wire from="(240,630)" to="(290,630)"/>
    <wire from="(250,120)" to="(250,300)"/>
    <wire from="(250,300)" to="(250,620)"/>
    <wire from="(250,300)" to="(290,300)"/>
    <wire from="(250,620)" to="(290,620)"/>
    <wire from="(260,100)" to="(260,290)"/>
    <wire from="(260,290)" to="(290,290)"/>
    <wire from="(320,240)" to="(420,240)"/>
    <wire from="(320,320)" to="(420,320)"/>
    <wire from="(320,410)" to="(420,410)"/>
    <wire from="(320,490)" to="(420,490)"/>
    <wire from="(320,580)" to="(330,580)"/>
    <wire from="(320,640)" to="(330,640)"/>
    <wire from="(330,580)" to="(330,600)"/>
    <wire from="(330,600)" to="(360,600)"/>
    <wire from="(330,620)" to="(330,640)"/>
    <wire from="(330,620)" to="(360,620)"/>
    <wire from="(390,610)" to="(420,610)"/>
    <wire from="(90,100)" to="(90,200)"/>
    <wire from="(90,200)" to="(180,200)"/>
    <wire from="(90,200)" to="(90,430)"/>
    <wire from="(90,430)" to="(290,430)"/>
    <wire from="(90,430)" to="(90,510)"/>
    <wire from="(90,510)" to="(290,510)"/>
    <wire from="(90,510)" to="(90,600)"/>
    <wire from="(90,600)" to="(290,600)"/>
    <wire from="(90,600)" to="(90,660)"/>
    <wire from="(90,660)" to="(290,660)"/>
    <wire from="(90,660)" to="(90,700)"/>
  </circuit>
</project>
